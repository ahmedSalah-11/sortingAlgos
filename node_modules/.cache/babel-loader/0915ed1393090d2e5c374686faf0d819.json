{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salah\\\\my-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, this.countFormat()), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Increment\"));\n  }\n\n  countFormat() {\n    let count = this.state.count;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/Salah/my-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","render","countFormat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE;AADD,KADsB;AAAA;;AAI9BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKC,WAAL,EAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD;;AAEDA,EAAAA,WAAW,GAAG;AACZ,QAAIF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAhB6B;;AAmBhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 1,\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span>{this.countFormat()}</span>\r\n        <button>Increment</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  countFormat() {\r\n    let count = this.state.count;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}