{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salah\\\\my-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  getTags() {\n    //conditional rendering\n    if (this.state.tags.length === 0) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      }, \"no tags\");\n    } else return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, tag)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: this.getClass(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, this.countFormat()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleIncrement(),\n      className: \"btn btn-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Increment\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, this.getTags()));\n  }\n\n  getClass() {\n    let shape = \"badge m-2 badge-\"; //pattern to make color dynamically change according to the value of count\n\n    shape += this.state.count === 0 ? \"warning\" : \"primary\";\n    return shape;\n  }\n\n  countFormat() {\n    let count = this.state.count;\n    return count === 0 ? \"zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/Salah/my-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","handleIncrement","setState","getTags","length","map","tag","render","getClass","countFormat","shape"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;;AAAA,SAmB9BC,eAnB8B,GAmBZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KArB6B;AAAA;;AAM9BI,EAAAA,OAAO,GAAG;AACR;AACA,QAAI,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,KAFD,MAGE,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,GAAhB,CAAqBC,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CADF;AAOH;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAE,KAAKC,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,WAAL,EAAnC,CADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKR,eAAL,EAAjB;AAAyC,MAAA,SAAS,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKE,OAAL,EAAN,CALF,CADF;AASD;;AAEDK,EAAAA,QAAQ,GAAG;AACT,QAAIE,KAAK,GAAG,kBAAZ,CADS,CACuB;;AAChCA,IAAAA,KAAK,IAAI,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAA9C;AACA,WAAOW,KAAP;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,QAAIV,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA3C6B;;AA8ChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n  };\r\n\r\n  getTags() {\r\n    //conditional rendering\r\n    if (this.state.tags.length === 0) {\r\n      return <p>no tags</p>;\r\n    } else\r\n      return (\r\n        <ul>\r\n          {this.state.tags.map((tag) => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n  }\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span className={this.getClass()}>{this.countFormat()}</span>\r\n        <button onClick={this.handleIncrement()} className=\"btn btn-dark\">\r\n          Increment\r\n        </button>\r\n        <div>{this.getTags()}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getClass() {\r\n    let shape = \"badge m-2 badge-\"; //pattern to make color dynamically change according to the value of count\r\n    shape += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return shape;\r\n  }\r\n\r\n  countFormat() {\r\n    let count = this.state.count;\r\n    return count === 0 ? \"zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}